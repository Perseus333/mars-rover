name: Makefile CI

on:
    push:
        branches: ["master"]
    pull_request:
        branches: ["master"]
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: make

  arduino_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Arduino CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh
          echo "$HOME/bin" >> $GITHUB_PATH
          echo "/home/runner/work/MEME/MEME/bin" >> $GITHUB_PATH
          export PATH=$PATH:/home/runner/work/MEME/MEME/bin

      - name: Configure Arduino CLI
        run: |
          arduino-cli config init
          arduino-cli core update-index
          arduino-cli core install arduino:avr

      - name: Install Required Libraries
        run: |
          arduino-cli lib install "Servo"

      - name: Compile Arduino Code
        run: |
          arduino-cli compile -b arduino:avr:uno sketch --output-dir build --library ./include --build-property build.extra_flags="-DTESTING=false -DSCANS_PER_SWIPE=10" 

      - name: Upload Compiled Firmware
        uses: actions/upload-artifact@v4
        with:
          name: arduino-firmware
          path: build/*.hex
      
      - name: Rename Hex
        run: |
          mv build/sketch.ino.hex main_arduino.hex

  release:
    needs: [build, arduino_build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build EXE (TESTING)
        run: make TESTING=true

      - name: Get latest tag
        id: get_tag
        run: echo "tag=v$(date +'%Y.%m.%d-%H%M%S')" >> $GITHUB_ENV

      - name: Generate release notes
        id: release_notes
        run: |
            echo "### Changes in this release" > release_notes.md
            echo "" >> release_notes.md
            git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 2>/dev/null || echo "")..HEAD >> release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.tag }}
          name: Release ${{ env.tag }}
          body_path: release_notes.md
          files: |
            build/main_testing.exe
            build/main_arduino.hex
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}